//https://www.geeksforgeeks.org/count-number-of-triplets-with-product-equal-to-given-number-with-duplicates-allowed-set-2/
#include<bits/stdc++.h>
using namespace std;

int countTriplets(int a[],int m, int n)
{
    unordered_map<int,int>mp;
    set<pair<int,pair<int,int>>>s;
    
    for(int i=0;i<n;i++)
        mp[a[i]]+=1;
    
    int ans=0,nums1=0;
    for(int i=1;i*i<=m;i++)
    {
        if(m%i==0 && mp[i])
        {
            nums1=m/i;
        
        for(int j=1;j*j<=nums1;j++)
        {
            if(nums1%j==0 && mp[j])
            {
                int nums2=nums1/j;
                if(mp[nums2])
                {
                    int tmp[]={nums2,i,j};
                    sort(tmp,tmp+3);
                
                    int setsize=s.size();
                    s.insert({tmp[0],{tmp[1],tmp[2]}});
                    if(setsize!=s.size())
                    {
                        if(i!=j && j!=nums2)
                        {
                            ans+=mp[i]*mp[j]*mp[nums2];
                        }
                        else if(i==j && j!=nums2)
                            ans+=(mp[i]*(mp[i]-1)/2)*mp[nums2];
                        else if(i!=j && j==nums2)
                            ans+=(mp[j]*(mp[j]-1)/2)*mp[i];
                        else if(i==j && j==nums2)
                            ans+=mp[i]*(mp[i]-1)*(mp[i]-2)/6;
                        else
                            ans+=(mp[i]*(mp[i]-1)/2)*mp[j];
                    }
                }
            }
        }
        }
    }
   return ans;
}
int main() 
{ 
    int a[] = { 0, 4, 6, 2, 3, 8}; 
    int m = 18; 
    int n = sizeof(a) / sizeof(a[0]); 
  
    cout << countTriplets(a, m, n); 
  
    return 0; 
} 
